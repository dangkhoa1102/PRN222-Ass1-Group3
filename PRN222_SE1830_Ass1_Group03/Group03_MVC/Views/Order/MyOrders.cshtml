@model IEnumerable<BusinessObjects.DTO.Orderdto>

@{
    ViewData["Title"] = "Đơn hàng của tôi";
}

<div class="container mt-4">
    <h2 class="mb-3">👤 Đơn hàng của tôi</h2>

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success">@TempData["SuccessMessage"]</div>
    }
    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger">@TempData["ErrorMessage"]</div>
    }

    <table class="table table-striped table-hover">
        <thead class="table-dark">
            <tr>
                <th>Mã đơn</th>
                <th>Xe</th>
                <th>Số tiền</th>
                <th>Trạng thái</th>
                <th>Thanh toán</th>
                <th>Ngày tạo</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var order in Model)
            {
                <tr>
                    <td>@order.OrderNumber</td>
                    <td>@order.VehicleName</td>
                    <td>@order.TotalAmount.ToString("N0") đ</td>

<td>
    @if (order.Status?.Equals("pending", StringComparison.OrdinalIgnoreCase) == true)
    {
        <span class="badge bg-warning text-dark">@order.Status</span> <!-- vàng đậm -->
    }
    else if (order.Status?.Equals("processing", StringComparison.OrdinalIgnoreCase) == true)
    {
        <span class="badge bg-warning-subtle text-warning">@order.Status</span> <!-- vàng nhạt -->
    }
    else if (order.Status?.Equals("confirmed", StringComparison.OrdinalIgnoreCase) == true)
    {
        <span class="badge bg-success-subtle text-success">@order.Status</span> <!-- xanh nhạt -->
    }
    else if (order.Status?.Equals("completed", StringComparison.OrdinalIgnoreCase) == true)
    {
        <span class="badge bg-success">@order.Status</span> <!-- xanh lá đậm -->
    }
    else
    {
        <span class="badge bg-secondary">@order.Status</span> <!-- fallback -->
    }
</td>

                    <td>
                        @if (order.PaymentStatus?.Equals("Paid", StringComparison.OrdinalIgnoreCase) == true)
                        {
                            <span class="badge bg-success">Đã thanh toán</span>
                        }
                        else
                        {
                            <span class="badge bg-warning text-dark">Chưa thanh toán</span>
                        }
                    </td>
                    <td>@order.CreatedAt?.ToString("dd/MM/yyyy")</td>
                    <td>
                        <a class="btn btn-sm btn-primary"
                           href="@Url.Action("Details", "Order", new { id = order.Id })">Chi tiết</a>
                        @if (order.PaymentStatus?.Equals("Unpaid", StringComparison.OrdinalIgnoreCase) == true)
                        {
                            <form asp-action="CompletePayment" method="post" class="d-inline">
                                <input type="hidden" name="orderId" value="@order.Id" />
                                <input type="hidden" name="customerId" value="@order.CustomerId" />
                                <button type="submit" class="btn btn-sm btn-success">Thanh toán</button>
                            </form>
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

@model IEnumerable<BusinessObjects.DTO.VehicleDTO>

@{
    ViewData["Title"] = "Vehicle Management";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container-fluid mt-4">
    <div class="row">
        <div class="col-12">
            <!-- Header Section -->
            <div class="d-flex justify-content-between align-items-center mb-4">
                <div>
                    <h2 class="text-primary mb-0">
                        <i class="fas fa-car me-2"></i>Vehicle Management
                    </h2>
                    <p class="text-muted mb-0">Total: @Model.Count() vehicles</p>
                </div>
                <div class="d-flex gap-2">
                    <a asp-action="Create" class="btn btn-primary">
                        <i class="fas fa-plus me-2"></i>Add Vehicle
                    </a>
                </div>
            </div>

            <!-- Success Message -->
            @if (TempData["SuccessMessage"] != null)
            {
                <div class="alert alert-success alert-dismissible fade show" role="alert">
                    <i class="fas fa-check-circle me-2"></i>@TempData["SuccessMessage"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                </div>
            }

            <!-- Error Messages -->
            @if (TempData["ErrorMessage"] != null)
            {
                <div class="alert alert-danger alert-dismissible fade show" role="alert">
                    <i class="fas fa-exclamation-circle me-2"></i>@TempData["ErrorMessage"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                </div>
            }

            <!-- Search and Filters -->
            <div class="card mb-4">
                <div class="card-body">
                    <div class="row g-3">
                        <div class="col-md-3">
                            <label for="searchInput" class="form-label">Search</label>
                            <div class="input-group">
                                <span class="input-group-text"><i class="fas fa-search"></i></span>
                                <input type="text" id="searchInput" class="form-control" placeholder="Search vehicles...">
                            </div>
                        </div>

                        <div class="col-md-2">
                            <label for="brandFilter" class="form-label">Brand</label>
                            <select id="brandFilter" class="form-select">
                                <option value="">All Brands</option>
                                @foreach (var brand in Model.Select(v => v.Brand).Distinct().Where(b => !string.IsNullOrEmpty(b)).OrderBy(b => b))
                                {
                                    <option value="@brand">@brand</option>
                                }
                            </select>
                        </div>

                        <div class="col-md-2">
                            <label for="stockFilter" class="form-label">Stock</label>
                            <select id="stockFilter" class="form-select">
                                <option value="">All Stock</option>
                                <option value="in-stock">In Stock</option>
                                <option value="low-stock">Low Stock</option>
                                <option value="out-of-stock">Out of Stock</option>
                            </select>
                        </div>

                        <div class="col-md-2">
                            <label for="sortSelect" class="form-label">Sort</label>
                            <select id="sortSelect" class="form-select">
                                <option value="">Default</option>
                                <option value="name-asc">Name A-Z</option>
                                <option value="name-desc">Name Z-A</option>
                                <option value="price-asc">Price Low-High</option>
                                <option value="price-desc">Price High-Low</option>
                                <option value="year-desc">Newest First</option>
                                <option value="stock-desc">Stock High-Low</option>
                            </select>
                        </div>

                        <div class="col-md-3 d-flex align-items-end">
                            <div class="btn-group w-100">
                                <button type="button" class="btn btn-outline-primary view-toggle active" data-view="grid">
                                    <i class="fas fa-th me-1"></i>Grid
                                </button>
                                <button type="button" class="btn btn-outline-primary view-toggle" data-view="list">
                                    <i class="fas fa-list me-1"></i>List
                                </button>
                                <button type="button" class="btn btn-outline-secondary" onclick="clearAllFilters()">
                                    <i class="fas fa-times me-1"></i>Clear
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Vehicle Grid -->
            <div class="row" id="vehicleGrid">
                @if (Model.Any())
                {
                    @foreach (var vehicle in Model)
                    {
                        <div class="col-md-4 col-lg-3 mb-4 vehicle-card" 
                             data-brand="@vehicle.Brand"
                             data-name="@vehicle.Name"
                             data-model="@vehicle.Model"
                             data-year="@vehicle.Year"
                             data-price="@vehicle.Price"
                             data-stock-quantity="@vehicle.StockQuantity"
                             data-stock="@(vehicle.StockQuantity > 5 ? "in-stock" : vehicle.StockQuantity > 0 ? "low-stock" : "out-of-stock")">
                            <div class="card h-100 shadow-sm">
                                <!-- Vehicle Image -->
                                <div class="position-relative">
                                    @if (!string.IsNullOrEmpty(vehicle.Images))
                                    {
                                        var imageUrl = vehicle.Images.Split(',')[0].Trim();
                                        <div style="height: 200px; overflow: hidden;">
                                            <img src="@imageUrl"
                                                 class="card-img-top" style="width: 100%; height: 100%; object-fit: cover;"
                                                 alt="@vehicle.Name"
                                                 onerror="this.src='https://via.placeholder.com/350x200/e2e8f0/64748b?text=No+Image';">
                                        </div>
                                    }
                                    else
                                    {
                                        <div class="d-flex align-items-center justify-content-center bg-light" style="height: 200px;">
                                            <i class="fas fa-car fa-3x text-muted"></i>
                                        </div>
                                    }

                                    <!-- Stock Badge -->
                                    @{
                                        var stockBadgeClass = vehicle.StockQuantity <= 0 ? "danger" :
                                        vehicle.StockQuantity <= 5 ? "warning" : "success";
                                        var stockBadgeText = vehicle.StockQuantity <= 0 ? "Out of Stock" :
                                        vehicle.StockQuantity <= 5 ? "Low Stock" : "In Stock";
                                    }
                                    <span class="badge bg-@stockBadgeClass" style="position: absolute; top: 10px; right: 10px;">
                                        @stockBadgeText
                                    </span>
                                </div>

                                <div class="card-body">
                                    <div class="d-flex justify-content-between align-items-start mb-2">
                                        <h5 class="card-title text-primary mb-0">@vehicle.Name</h5>
                                        <h5 class="text-success mb-0">@vehicle.Price.ToString("C")</h5>
                                    </div>

                                    <div class="mb-2">
                                        <i class="fas fa-tag me-1"></i>@vehicle.Brand @vehicle.Model
                                        @if (vehicle.Year.HasValue)
                                        {
                                            <span class="badge bg-light text-dark ms-2">@vehicle.Year</span>
                                        }
                                    </div>

                                    @if (!string.IsNullOrEmpty(vehicle.Description))
                                    {
                                        <p class="card-text" style="font-size: 0.9rem; color: #6c757d;">
                                            @(vehicle.Description.Length > 100 ? vehicle.Description.Substring(0, 100) + "..." : vehicle.Description)
                                        </p>
                                    }

                                    <div class="d-flex gap-2 flex-wrap">
                                        <a asp-action="Details" asp-route-id="@vehicle.Id" class="btn btn-outline-primary btn-sm">
                                            <i class="fas fa-eye me-1"></i>View
                                        </a>
                                        <a asp-action="Edit" asp-route-id="@vehicle.Id" class="btn btn-outline-warning btn-sm">
                                            <i class="fas fa-edit me-1"></i>Edit
                                        </a>
                                        <a asp-action="Delete" asp-route-id="@vehicle.Id" class="btn btn-outline-danger btn-sm">
                                            <i class="fas fa-trash me-1"></i>Delete
                                        </a>
                                    </div>
                                </div>

                                <div class="card-footer">
                                    <small class="text-muted">
                                        <i class="fas fa-boxes me-1"></i>Stock: @vehicle.StockQuantity
                                    </small>
                                </div>
                            </div>
                        </div>
                    }
                }
                else
                {
                    <div class="col-12">
                        <div class="text-center py-5">
                            <div class="mb-4">
                                <i class="fas fa-car fa-4x text-muted"></i>
                            </div>
                            <h4>No vehicles found</h4>
                            <p>Start by adding your first vehicle to the inventory.</p>
                            <a asp-action="Create" class="btn btn-primary btn-lg">
                                <i class="fas fa-plus me-2"></i>Add Vehicle
                            </a>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<style>
    .vehicle-card {
        transition: transform 0.2s ease;
    }
    
    .vehicle-card:hover {
        transform: translateY(-5px);
    }
    
    .card {
        box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        border: none;
    }
    
    .card:hover {
        box-shadow: 0 4px 8px rgba(0,0,0,0.15);
    }
    
    .view-toggle {
        border: 1px solid #dee2e6;
    }
    
    .view-toggle.active {
        background-color: #0d6efd;
        color: white;
        border-color: #0d6efd;
    }
    
    .view-toggle:not(.active) {
        background-color: white;
        color: #0d6efd;
    }
    
    .view-toggle:not(.active):hover {
        background-color: #f8f9fa;
    }
</style>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        const searchInput = document.getElementById('searchInput');
        const brandFilter = document.getElementById('brandFilter');
        const stockFilter = document.getElementById('stockFilter');
        const sortSelect = document.getElementById('sortSelect');
        const viewToggleBtns = document.querySelectorAll('.view-toggle');
        const vehicleGrid = document.getElementById('vehicleGrid');
        const vehicleCards = document.querySelectorAll('.vehicle-card');

        // Search functionality
        searchInput.addEventListener('input', function() {
            filterVehicles();
        });

        // Filter functionality
        brandFilter.addEventListener('change', filterVehicles);
        stockFilter.addEventListener('change', filterVehicles);
        sortSelect.addEventListener('change', sortVehicles);

        // View toggle functionality
        viewToggleBtns.forEach(btn => {
            btn.addEventListener('click', function() {
                viewToggleBtns.forEach(b => b.classList.remove('active'));
                this.classList.add('active');

                const view = this.dataset.view;
                if (view === 'list') {
                    vehicleGrid.className = 'row';
                    vehicleCards.forEach(card => {
                        card.className = 'col-12 mb-3 vehicle-card';
                    });
                } else {
                    vehicleGrid.className = 'row';
                    vehicleCards.forEach(card => {
                        card.className = 'col-md-4 col-lg-3 mb-4 vehicle-card';
                    });
                }
            });
        });

        function filterVehicles() {
            const searchTerm = searchInput.value.toLowerCase();
            const selectedBrand = brandFilter.value.toLowerCase();
            const selectedStock = stockFilter.value;

            vehicleCards.forEach(card => {
                const name = card.dataset.name.toLowerCase();
                const brand = card.dataset.brand.toLowerCase();
                const model = card.dataset.model.toLowerCase();
                const stock = card.dataset.stock;

                const matchesSearch = name.includes(searchTerm) || brand.includes(searchTerm) || model.includes(searchTerm);
                const matchesBrand = !selectedBrand || brand.includes(selectedBrand);
                const matchesStock = !selectedStock || stock === selectedStock;

                if (matchesSearch && matchesBrand && matchesStock) {
                    card.style.display = 'block';
                } else {
                    card.style.display = 'none';
                }
            });
        }

        function sortVehicles() {
            const sortValue = sortSelect.value;
            const cardsArray = Array.from(vehicleCards);

            cardsArray.sort((a, b) => {
                switch(sortValue) {
                    case 'name-asc':
                        return a.dataset.name.localeCompare(b.dataset.name);
                    case 'name-desc':
                        return b.dataset.name.localeCompare(a.dataset.name);
                    case 'price-asc':
                        return parseFloat(a.dataset.price) - parseFloat(b.dataset.price);
                    case 'price-desc':
                        return parseFloat(b.dataset.price) - parseFloat(a.dataset.price);
                    case 'year-desc':
                        return parseInt(b.dataset.year) - parseInt(a.dataset.year);
                    case 'stock-desc':
                        return parseInt(b.dataset.stockQuantity) - parseInt(a.dataset.stockQuantity);
                    default:
                        return 0;
                }
            });

            // Re-append sorted cards
            cardsArray.forEach(card => vehicleGrid.appendChild(card));
        }

        // Clear filters function
        window.clearAllFilters = function() {
            searchInput.value = '';
            brandFilter.value = '';
            stockFilter.value = '';
            sortSelect.value = '';
            filterVehicles();
        };
    });
</script>